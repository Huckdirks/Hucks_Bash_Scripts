#!/bin/bash

# ANSI color codes
# https://en.wikipedia.org/wiki/ANSI_escape_code#Colors
RED='\033[0;31m'
GREEN='\033[0;32m'
#YELLOW='\033[0;33m'
#BLUE='\033[0;34m'
#MAGENTA='\033[0;35m'
CYAN='\033[0;36m'
#WHITE='\033[0;37m'
NC='\033[0m' # No Color

# Bold
#BBlack='\033[1;30m'       # Black
BRed='\033[1;31m'         # Red
BGreen='\033[1;32m'       # Green
#BYellow='\033[1;33m'      # Yellow
#BBlue='\033[1;34m'        # Blue
#BPurple='\033[1;35m'      # Purple
#BCyan='\033[1;36m'        # Cyan
#BWhite='\033[1;37m'       # White

# Underline
#UBlack='\033[4;30m'       # Black
URed='\033[4;31m'         # Red
UGreen='\033[4;32m'       # Green
#UYellow='\033[4;33m'      # Yellow
#UBlue='\033[4;34m'        # Blue
#UPurple='\033[4;35m'      # Purple
#UCyan='\033[4;36m'        # Cyan
#UWhite='\033[4;37m'       # White

# Background
#On_Black='\033[40m'       # Black
#On_Red='\033[41m'         # Red
#On_Green='\033[42m'       # Green
#On_Yellow='\033[43m'      # Yellow
#On_Blue='\033[44m'        # Blue
#On_Purple='\033[45m'      # Purple
#On_Cyan='\033[46m'        # Cyan
#On_White='\033[47m'       # White

#B_U_RED='\033[1;4;31m' # Bold, Underline, Red
#B_U_YELLOW='\033[1;4;33m' # Bold, Underline, Yellow
#B_U_GREEN='\033[1;4;32m' # Bold, Underline, Green

if [[ "$#" -lt 2 ]]; then
  echo "Usage: find_replace FIND_WORD REPLACE_WORD [-r REGEX_PATTERN] [SEARCH_DIR]"
  echo "Search for files with the word FIND_WORD in their names and replace it with REPLACE_WORD."
  echo "Options:"
  echo "  -r REGEX_PATTERN  Use REGEX_PATTERN as a regex pattern to search for files. Use '\$1' as a placeholder for FIND_WORD."
  echo "  SEARCH_DIR        The directory to search in, default to current directory if not provided."
  exit 1
fi


# Word to find in file names, treated as a regex pattern
FIND_WORD=$1
# Word to replace with
REPLACE_WORD=$2

SHIFT_NUM=2

# Check if the -r option is present
if [[ "$3" == "-r" ]]; then
  REGEX_PLACEHOLDER="$4"
  # Replace the placeholder $1 in the regex pattern with the actual $1 argument value
  REGEX_PATTERN=$(echo "$REGEX_PLACEHOLDER" | sed "s/\$1/$FIND_WORD/g")
  SEARCH_DIR="${5:-$PWD}" # Default to current directory if not provided
  SHIFT_NUM=4
else
  # If no -r is present, use $1 directly as part of the REGEX_PATTERN
  REGEX_PATTERN="$FIND_WORD"
  SEARCH_DIR="${3:-$PWD}" # Default to current directory if not provided
fi

# Ensure all the initial arguments are processed before running the main command
# I actually have no idea why this is here ¯\_(ツ)_/¯
shift "$SHIFT_NUM"

fd $REGEX_PATTERN $SEARCH_DIR | while read -r FILE; do
    NEW_FILE=$(echo "$FILE" | sed "s/$FIND_WORD/$REPLACE_WORD/g")

    echo -e "${BGreen}Original: ${UGreen}$FILE${NC} ${CYAN}-> ${BRed}New: ${URed}$NEW_FILE${NC}"
    mv "$FILE" "$NEW_FILE"
done
